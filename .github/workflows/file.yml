name: File Service CI Pipeline

on:
  push:
    paths:
      - backend/src/**
      - .github/workflows/file.yml
    branches:
      - master
      - develop
    tags:
      - 'v*'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run reusable Build and Test action
        uses: ./.github/actions/build-and-test
        with:
          backendCsprojPath: ./backend/src/FileService/FileService.Api/FileService.Api.csproj
#          unitTestsProjectPath: ./backend/tests/FileService/FileService.Domain.Tests/FileService.Domain.Tests.csproj
          buildConfiguration: Release
          serviceName: FileService
  
  docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ env.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ env.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          IMAGE_VERSION="latest"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            IMAGE_VERSION=${GITHUB_REF#refs/tags/}
          fi
          docker buildx build \
            -t ${{ env.DOCKER_HUB_USERNAME }}/file-service:${IMAGE_VERSION} \
            -t ${{ env.DOCKER_HUB_USERNAME }}/file-service:latest \
            -f ./backend/src/FileService/Dockerfile \
            ./backend/src

      - name: Push latest Docker image to Docker Hub
        run: docker push ${{ env.DOCKER_HUB_USERNAME }}/file-service:latest
        
      - name: Push Docker image to Docker Hub
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE_VERSION=${GITHUB_REF#refs/tags/}
          docker push ${{ env.DOCKER_HUB_USERNAME }}/file-service:${IMAGE_VERSION}