networks:
  microservices:
    driver: bridge

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      post-service:
        condition: service_healthy
    networks: 
      - microservices
  
  post-service:
    container_name: post-service
    build:
      context: ./backend/src
      dockerfile: PostService/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      postgres-posts:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://post-service:8081/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - microservices

  postgres-auth:
    container_name: postgres-auth
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpasswordfordevelopment
      POSTGRES_DB: auth-db
    ports:
      - "5433:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - auth-service-data:/var/lib/postgresql/data
    networks:
      - microservices
  
  postgres-posts:
    container_name: postgres-posts
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpasswordfordevelopment
      POSTGRES_DB: posts-db
    ports:
      - "5434:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - post-service-data:/var/lib/postgresql/data
    networks:
      - microservices
  
  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: keycloak
    environment:
      - KC_DB_VENDOR=h2
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=localhost
    ports:
      - "8080:8080"
    command: [ "start-dev" ]
    restart: always
    networks: 
      - microservices

volumes:
  auth-service-data:
  post-service-data:
